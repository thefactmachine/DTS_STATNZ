A <- 1:30
A
A * 2
1:14
1:9
1:9 *2
a<- 1:9 *2
sum(a)
1:9
(1:9)*5
1:500
1:-670
seq(1, 5, 0.5)
1:23 ^ 3
(1:23) ^ 3
a <- (1:23) ^ 3
a
a *2
a{2}
a[3]
x <- c(“a”, “b”, “c”, “d”)for (I in seq_along(x)) {	Print(x[i])}
x <- c(“a”, “b”, “c”, “d”)
x <- c('a', 'b', 'c', 'd')
for (I in seq_along(x)) {	Print(x[i])}
for (I in seq_along(x)) {	print(x[i])}
for (i in seq_along(x)) {	print(x[i])}
library('ggplot2')
1:89
bevs <- data.frame(cbind(name = c("Bill", "Llib"), drink = c("coffee", "tea", "cocoa", "water"), cost = seq(1:8)))
bevs
bevs$cost <- as.integer(bevs$cost)
aggregate(cost ~ name + drink, data = bevs, sum)
aggregate(cost ~ name + drink, data = bevs, mean)
library(gbm)
1:8
1:8*2
require('magrittr')
dev.off()
?dev.off
library(reshape2)
library(gridExtra)
knitr
library(knitr)
library(shinyapps)
library(shiny)
library(dplyr)
library(tidyr)
library(stringr)
x = c(12,34,23,11,34,45,12,11)
length(x)
diff(x,2)
length(diff(x,2))
1:34
15 * 30
230 * 30
2500 * 2.19
2500 * 2.19 / 4.3
140 * 8
42 + 30.5 + 40.5 + 35
148 + 40
188 * 110
1200 * 1.1
1200 * (183/155)
print("hi there")
# this is a comment
dd
1 - 0.16
0.68 /2
(0.68 /2) 0.5
(0.68 /2)  0.5
(0.68 /2) + 0.5
?rnorm
salaries <- rnorm(100, mean = 50000, sd = 10000)
median(salaries)
salaries <- rnorm(100, mean = 50000, sd = 10000)
salaries <- sort(salaries)
salaries
salaries[100] <- 1000000
median(salaries)
mean(salaries)
5601.92 + 244.96
19 * 8 * 110
l <- replicate(20, runif(sample(1:10, 1)), simplify = FALSE)
l
runif(sample(1:10, 1))
out <- vector("list", length(l))
out
seq_along(1)
l <- replicate(20, runif(sample(1:10, 1)), simplify = FALSE)#
#length(l) is 20#
# create a blank list of 20 elements#
out <- vector("list", length(l))#
# seq_along(20) is 1 .. 20
seq_along(l)
seq_len(l)
seq_len(10)
for (i in seq_along(l)) {#
  out[[i]] <- length(l[[i]])#
}
out
# now with lapply  apply length to each element of the list#
aa <- lapply(l, length)
aa
out
aa
unlist(lapply(mtcars, class))
mtcars[] <- lapply(mtcars, function(x) x / mean(x))
mtcars
rm(list = ls())#
#
l <- replicate(20, runif(sample(1:10, 1)), simplify = FALSE)#
#length(l) is 20#
# create a blank list of 20 elements#
out <- vector("list", length(l))#
# seq_along(20) is 1 .. 20#
#
for (i in seq_along(l)) {#
  out[[i]] <- length(l[[i]])#
}#
# out is a list of length 20 ... each element is the length of l#
# now with lapply  apply length to each element of the list#
aa <- lapply(l, length)#
# and now as a data.frame is a list apply to each eleent (ie column)#
# get the class of each column#
unlist(lapply(mtcars, class))#
#
# Divide each column by the mean#
mtcars_new[] <- lapply(mtcars, function(x) x / mean(x))
# Divide each column by the mean#
mtcars_new <- lapply(mtcars, function(x) x / mean(x))
mtcars_new
mtcars_new <- unlist(lapply(mtcars, function(x) x / mean(x)))
mtcars_new
mtcars_new <- data.frame((lapply(mtcars, function(x) x / mean(x))))
mtcars_new
x <- rcauchy(1000)
x
?trim
unlist(lapply(trims, function(trim) mean(x, trim = trim)))
unlist(lapply(rcauchy(1000), function(trim) mean(x, trim = trim)))
###
##    Programme Name:  	integrate.R#
##	#
##    Objective:      	To call four scripts that create various Domestic Travel Survey outputs.#
###
###
##    Author: 		   	Mark Hatcher (Sector Trends, December, 2015)#
# clear everything#
rm(list = ls())#
#
# supress warnings#
options(warn=-1)#
#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
system.time(source('7578_create_accommodation.R', echo = FALSE))
###
##    Programme Name:  	integrate.R#
##	#
##    Objective:      	To call four scripts that create various Domestic Travel Survey outputs.#
###
###
##    Author: 		   	Mark Hatcher (Sector Trends, December, 2015)#
# clear everything#
rm(list = ls())#
#
# supress warnings#
options(warn=-1)#
#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
system.time(source('7578_create_accommodation.R', echo = FALSE))
# clear everything#
rm(list = ls())#
#
# supress warnings#
options(warn=-1)#
#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
system.time(source('7578_create_accommodation.R', echo = FALSE))#
system.time(source('7579_create_trips.R', echo = FALSE))#
system.time(source('7580_create_spend.R', echo = FALSE))#
system.time(source('7581_create_activity.R', echo = FALSE))#
# turn warnings back on#
options(warn=0)
###
##    Programme Name:  	integrate.R#
##	#
##    Objective:      	To call four scripts that create various Domestic Travel Survey outputs.#
###
###
##    Author: 		   	Mark Hatcher (Sector Trends, December, 2015)#
# clear everything#
rm(list = ls())#
#
# supress warnings#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
system.time(source('7578_create_accommodation.R', echo = FALSE))#
system.time(source('7579_create_trips.R', echo = FALSE))#
system.time(source('7580_create_spend.R', echo = FALSE))#
system.time(source('7581_create_activity.R', echo = FALSE))
###
##    Programme Name:  	integrate.R#
##	#
##    Objective:      	To call four scripts that create various Domestic Travel Survey outputs.#
###
###
##    Author: 		   	Mark Hatcher (Sector Trends, December, 2015)#
# clear everything#
rm(list = ls())#
#
# supress warnings#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
#system.time(source('7578_create_accommodation.R', echo = FALSE))#
#system.time(source('7579_create_trips.R', echo = FALSE))#
#system.time(source('7580_create_spend.R', echo = FALSE))#
system.time(source('7581_create_activity.R', echo = FALSE))
# clear everything#
rm(list = ls())#
#
# supress warnings#
# create a string based on date (YYYYMMDD) and time (HHMM) for current folder#
str_cur_dir <- format(Sys.time(), "%Y%m%d-%H%M")#
#
setwd('/Users/zurich/Documents/TEMP-FILES/MBIE/DTS_STATNZ')#
#
system.time(source('7578_create_accommodation.R', echo = FALSE))#
system.time(source('7579_create_trips.R', echo = FALSE))#
system.time(source('7580_create_spend.R', echo = FALSE))#
system.time(source('7581_create_activity.R', echo = FALSE))
